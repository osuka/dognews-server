http# NOTE:
#   This file can be used to send requests directly from
#   Visual Studio Code. All you need to do is install
#   teh "REST Client" addon (by Huachao Mao) and then open
#   this file.

#   It will add 'Send Request' buttons and a side window
#   to display results. You can edit, modify etc.

#   Documentation:
#   https://github.com/Huachao/vscode-restclient

###

@server=http://127.0.0.1:8000

###

GET {{server}}/users
Authorization: Basic SOMEUSER:SOMEPASS

###

# @name login
# @prompt user
# @prompt passwd
POST {{server}}/api/token/
content-type: application/json

{
  "username": "{{user}}",
  "password": "{{passwd}}"
}

###

# JWT authentication
@accessToken = {{login.response.body.access}}
@refreshToken = {{login.response.body.refresh}}

###

# @name submission
# Create a submission - this is done by parsing sources of articles
# it can include a title and a description, or else they will be fetched from the contents

POST {{server}}/submissions
content-type: application/json
Authorization: Bearer {{accessToken}}

{
  "target_url": "https://www.itv.com/news/calendar/2022-09-16/dog-heard-crying-after-being-left-tied-to-tree-finds-loving-new-home",
  "date": "2022-09-17T17:09:58.418Z"
}

### the response contains the id

@submissionId = {{submission.response.body.id}} # bizarro world: this id is not the same as in url
@submissionUrl = {{submission.response.body.url}}

###

DELETE http://127.0.0.1:8000/submissions/797457564071886849
Authorization: Bearer {{accessToken}}

###

GET {{server}}/submissions
Authorization: Bearer {{accessToken}}

###

GET {{submissionUrl}}
Authorization: Bearer {{accessToken}}

###

# ------------- A submission has been created

# Now its contents is extracted and then saved as the 'fetch' subobject

###

PUT {{submissionUrl}}/fetch
content-type: application/json
Authorization: Bearer {{accessToken}}

{
  "status": "rej_error"
}

###

PUT {{submissionUrl}}/fetch
content-type: application/json
Authorization: Bearer {{accessToken}}

{
  "status": "rej_error",
  "description": "An exception occured"
}

###

PUT {{submissionUrl}}/fetch
content-type: application/json
Authorization: Bearer {{accessToken}}

{
  "status": "rej_fetch",
  "description": "Could not be fetched"
}

###

PUT {{submissionUrl}}/fetch
content-type: application/json
Authorization: Bearer {{accessToken}}

{
  "status": "fetched",
   "title": "I Am The Title Of This Article",
  "description": "Article about dogs that says blah blah"
}

###

PUT {{submissionUrl}}/fetch
content-type: application/json
Authorization: Bearer {{accessToken}}

{
  "status": "fetched",
   "title": "I Am The Title Of This Article",
  "description": "Article about dogs that says blah blah",
  "thumbnail_from_page": "this_should_not_work"
}


###

PUT {{submissionUrl}}/fetch
content-type: application/json
Authorization: Bearer {{accessToken}}

{
  "status": "fetched",
   "title": "I Am The Title Of This Article",
  "description": "Article about dogs that says blah blah",
  "thumbnail_processed": "this_should_not_work"
}

###

PUT {{submissionUrl}}/fetch
content-type: application/json
Authorization: Bearer {{accessToken}}

{
  "status": "fetched",
  "title": "I Am The Title Of This Article",
  "description": "Article about dogs that says blah blah",
  "thumbnail_submitted": "this_should_not_work"
}

###

GET {{submissionUrl}}/fetch
Authorization: Bearer {{accessToken}}

###

# this uses a django rest framework MultiFormParser with fileupload parser and application json parser
PUT {{submissionUrl}}/fetch/thumbnails
Authorization: Bearer {{accessToken}}
Content-Type: multipart/form-data;boundary="WeE843erSADF32Sdsa0329r0easfd"

--WeE843erSADF32Sdsa0329r0easfd
Content-Disposition: form-data; name="thumbnail_from_page"; filename="test/resources/Test-Logo-Small-Black-transparent-1.png"
Content-type: image/png

< ./test/resources/Test-Logo-Small-Black-transparent-1.png
--WeE843erSADF32Sdsa0329r0easfd
Content-Disposition: form-data; name="thumbnail_processed"; filename="test/resources/Test-Logo-Small-Black-transparent-1.png"
Content-type: image/png

< ./test/resources/Test-Logo-Small-Black-transparent-1.png
--WeE843erSADF32Sdsa0329r0easfd

###


# should not allow simple hacks with the path of files
PUT {{submissionUrl}}/fetch/thumbnails
Authorization: Bearer {{accessToken}}
Content-Type: multipart/form-data;boundary="WeE843erSADF32Sdsa0329r0easfd"

--WeE843erSADF32Sdsa0329r0easfd
Content-Disposition: form-data; name="thumbnail_from_page"; filename="/etc/password"
Content-type: image/jpg

< ./test/resources/placeholder-400.jpg
--WeE843erSADF32Sdsa0329r0easfd
###

# should not allow simple hacks with the field names
PUT {{submissionUrl}}/fetch/thumbnails
Authorization: Bearer {{accessToken}}
Content-Type: multipart/form-data;boundary="WeE843erSADF32Sdsa0329r0easfd"

--WeE843erSADF32Sdsa0329r0easfd
Content-Disposition: form-data; name="thumbnail_not_defined"; filename="placeholder-400.png"
Content-type: image/jpg

< ./test/resources/placeholder-400.jpg
--WeE843erSADF32Sdsa0329r0easfd
###

